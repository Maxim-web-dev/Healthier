import { foodAdditives } from '../foodAdditives.js';

export const checkCompound = (ingredients) => {
	const harmfulAdditivesFound = [];
	const regex = new RegExp(foodAdditives.join('|'), 'gi');
	const matches = ingredients.match(regex);

	if (matches) {
		const uniqueMatches = [
			...new Set(matches.map(additive => additive.toLowerCase())),
		];
		harmfulAdditivesFound.push(...uniqueMatches);
	}

	if (harmfulAdditivesFound.length > 0) {
		return `–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–ø–∞—Å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: 

${harmfulAdditivesFound.join(', ')}. 

üíî–î–∞–Ω–Ω—ã–µ –ø–∏—â–µ–≤—ã–µ –¥–æ–±–∞–≤–∫–∏ –æ–ø–∞—Å–Ω—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–æ–¥—É–∫—Ç, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏—Ö.`;
	} else {
		return `–ü—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å–æ—Å—Ç–∞–≤‚Ä¶ 
–ò –æ–Ω –±–µ–∑–æ–ø–∞—Å–µ–Ω. –ü—Ä–æ–¥—É–∫—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–¥–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. 
üíö–ú–æ–∂–Ω–æ —Å–º–µ–ª–æ –∫—É—à–∞—Ç—å.`;
	}
};